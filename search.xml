<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>markdown(.md)文件的基本常用编写语法</title>
      <link href="2020/11/12/%E6%B5%8B%E8%AF%95/"/>
      <url>2020/11/12/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p></blockquote><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 这是一级标题</span><span class="token title important"><span class="token punctuation">##</span> 这是二级标题</span><span class="token title important"><span class="token punctuation">###</span> 这是三级标题</span><span class="token title important"><span class="token punctuation">####</span> 这是四级标题</span><span class="token title important"><span class="token punctuation">#####</span> 这是五级标题</span><span class="token title important"><span class="token punctuation">######</span> 这是六级标题</span></code></pre><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span>这是加粗的文字<span class="token punctuation">**</span></span><span class="token italic"><span class="token punctuation">*</span>这是倾斜的文字<span class="token punctuation">*</span></span>`<span class="token bold"><span class="token punctuation">**</span>*这是斜体加粗的文字<span class="token punctuation">**</span></span>*~~这是加删除线的文字~~</code></pre><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>`<br><strong><em>这是斜体加粗的文字</em></strong><br><del>这是加删除线的文字</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 这是引用的内容</code></pre><blockquote><p>这是引用的内容</p></blockquote><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><pre class=" language-markdown"><code class="language-markdown">![图片alt](图片地址 ''图片title'')</code></pre><p><img src="markdown.png" alt="markdown"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[超链接名](超链接地址 <span class="token string">"超链接title"</span>)</span>// title可加可不加</code></pre><p><a href="https://baidu.com/">百度</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">-</span> 无序列表<span class="token list punctuation">+</span> 无序列表<span class="token list punctuation">*</span> 无序列表<span class="token list punctuation">1.</span> 有序列表<span class="token list punctuation">2.</span> 有序列表<span class="token list punctuation">3.</span> 有序列表注意：- + * 跟内容之间都要有一个空格列表嵌套 : 上一级和下一级之间敲三个空格即可</code></pre><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><ul><li>无序列表</li></ul><ol><li>有序列表</li><li>有序列表</li><li>有序列表</li></ol><ul><li>列表嵌套<ul><li>列表嵌套</li></ul></li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><pre class=" language-markdown"><code class="language-markdown">表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。<span class="token list punctuation">-</span> 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略</code></pre><p>例如：</p><pre class=" language-markdown"><code class="language-markdown">姓名|技能|排行--|:--:|--:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟</code></pre><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/09/21/hello-world/"/>
      <url>2020/09/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="2020/09/03/test/"/>
      <url>2020/09/03/test/</url>
      
        <content type="html"><![CDATA[<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><pre><code>function a()&#123;    console.log();&#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue路由history模式</title>
      <link href="2020/09/03/vue%E8%B7%AF%E7%94%B1history%E9%85%8D%E7%BD%AE/"/>
      <url>2020/09/03/vue%E8%B7%AF%E7%94%B1history%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>vue-router 默认是 hash 模式，在 url后面会有一个 # 号，在一些情况下，因为 #号的原因，会让后面的 uri 丢失导致 url  跳转出现问题(比如在微信内跳转异常)。这时候 可以使用 history 模式，取缔 # 号，这时候需要在服务器进行配置。  </p><h4 id="nginx的一些知识点"><a href="#nginx的一些知识点" class="headerlink" title="nginx的一些知识点"></a>nginx的一些知识点</h4><p><strong>location</strong>  </p><p>语法规则：location [=|<del>|</del>*|^~|@] pattern { … }  </p><ul><li>=开头表示精确匹配  </li><li>~ 开头表示区分大小写的正则匹配  </li><li>~* 开头表示不区分大小写的正则匹配  </li><li>^~ 开头表示uri以某个常规字符串 URI开头进行匹配。nginx不对url做编码，因此请求为/static/20%/aa，可以被规则^~          /static/ /aa匹配到（注意是空格）  </li><li>/ 通用匹配，任何请求都会匹配到。  </li></ul><p><strong>root</strong><br>根路径配置，在匹配到 location 的 uri 路径后，指向 root 配置的路径，并把 uri 路径加在 root 路径后面。 </p><pre><code>location /dist/ &#123;    root /home/mine/files/;&#125;</code></pre><p>当我访问 http://[host]/dist/test.png 时，实际上返回的文件路径为 /home/mine/files/dist/test.png  </p><p><strong>alias</strong><br>别名配置，在匹配到 location 的 uri 路径后，指向 alias 配置的路径。  </p><pre><code>location /dist/ &#123;    alias  /home/mine/files/;&#125;</code></pre><p>当我访问 http://[host]/dist/test.png 时，实际上返回的文件路径为 /home/mine/files/test.png</p><p><strong>try_files</strong> </p><p>try_file 的作用类似与重定向  </p><pre><code>location /dist/ &#123;    alias /home/mine/files/;    try_files $uri $uri/ /dist/index.html;&#125;</code></pre><p>当访问 http://[host]/dist/example时，try_files 首先会在 /home/mine/files/ 目录下找是否有 example 这个文件，有则返回，未找到则找是否有 example 这个目录，有则返回，未找到则发起一个服务器内部发起重定向请求到 <a href="http://localhost/dist/index.html">http://localhost/dist/index.html</a> </p><p><strong>Vue Router配置</strong>  </p><p>当设置了 mode 为 history 时，Vue Router 有一个 base 的配置，假如 SPA 放入在一个 [host]/dist/ 服务下时，可以将 base 设置为 /dist/<br>此时 nginx 的配置可以更新为： </p><pre><code>location /dist &#123;    alias /home/mine/files;    index inde.html;    try_files $uri $uri/ /dist/index.html;&#125;</code></pre><p>将打包之后的代码放入 /home/mine/files 根目录下。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
